openapi: '3.0.1'

info:
  title: Onboarding  API
  version: '1.3'
  description: STD22081
servers:
  - url: http://STD22081.com
  - url: http://localhost:8080
paths:
  /student:
    get:
      tags:
        - "Student"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500' : 
          description: Internal Server Error

    
    post:
      tags:
        - "Student"
      requestBody:
        $ref: '#/components/requestBodies/Student'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          
        '500':
          description: InternalServerError

    delete:
      tags:
        - "Student"
      parameters:
        - name: studentId
          in: query
          description: "STD of the student to be deleted"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: 'Invalid ID'

        '404':
          description: 'STD not found'
        
    put:
      tags:
        - "Student"
      requestBody:
        $ref: '#/components/requestBodies/Student'

      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: Invalid ID


  /teacher:
    get: 
       responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '500' : 
          description: Internal Server Error

    post:
      requestBody:
        $ref: '#/components/requestBodies/Teacher'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          
        '500':
          description: InternalServerError

    delete:
      parameters:
        - name: teacherId
          in: query
          description: "TCH of the teacher to be deleted"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'

        '400':
          description: 'Invalid ID'

        '404':
          description: 'TCH not found'
        
    put:
      requestBody:
        $ref: '#/components/requestBodies/Student'

      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

        '400':
          description: Invalid ID

components:
  schemas:
    Student: 
      type: object
      properties:
        id: 
          type: string
          example: STD22081
        name:
          type: string
          example: Kirisaki_VK
        birthdate:
          type: string
          format: date-time

    Teacher:
      type: object
      properties:
        id:
          type: string
          example: TCH00321
        name:
          type: string
          example: Mr. Ryan
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Courses'

    Courses:
      type: object
      properties:
        id:
          type: string
          example: CRS00215
        name:
          type: string
          example: API
        description:
          type: string
          example: Course for undestanding how we can specify APIs

  requestBodies:
    Student:
      description: A body to posts students
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Student'
          
    Teacher:
      description: A body to posts teachers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Teacher'


# by Kirisaki_VK